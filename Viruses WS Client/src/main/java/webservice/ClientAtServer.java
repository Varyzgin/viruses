
package webservice;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "ClientAtServer", targetNamespace = "http://server/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ClientAtServer {


    /**
     * 
     */
    @WebMethod
    @RequestWrapper(localName = "connect", targetNamespace = "http://server/", className = "webservice.Connect")
    @ResponseWrapper(localName = "connectResponse", targetNamespace = "http://server/", className = "webservice.ConnectResponse")
    @Action(input = "http://server/ClientAtServer/connectRequest", output = "http://server/ClientAtServer/connectResponse")
    public void connect();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "push", targetNamespace = "http://server/", className = "webservice.Push")
    @ResponseWrapper(localName = "pushResponse", targetNamespace = "http://server/", className = "webservice.PushResponse")
    @Action(input = "http://server/ClientAtServer/pushRequest", output = "http://server/ClientAtServer/pushResponse")
    public void push(
        @WebParam(name = "arg0", targetNamespace = "")
        List<CellTypeArray> arg0);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.CellTypeArray>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "movesHistoryDownloader", targetNamespace = "http://server/", className = "webservice.MovesHistoryDownloader")
    @ResponseWrapper(localName = "movesHistoryDownloaderResponse", targetNamespace = "http://server/", className = "webservice.MovesHistoryDownloaderResponse")
    @Action(input = "http://server/ClientAtServer/movesHistoryDownloaderRequest", output = "http://server/ClientAtServer/movesHistoryDownloaderResponse")
    public List<CellTypeArray> movesHistoryDownloader();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "movesSender", targetNamespace = "http://server/", className = "webservice.MovesSender")
    @ResponseWrapper(localName = "movesSenderResponse", targetNamespace = "http://server/", className = "webservice.MovesSenderResponse")
    @Action(input = "http://server/ClientAtServer/movesSenderRequest", output = "http://server/ClientAtServer/movesSenderResponse")
    public void movesSender(
        @WebParam(name = "arg0", targetNamespace = "")
        Cell arg0);

    /**
     * 
     * @return
     *     returns java.util.List<webservice.BooleanArray>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "availableMovesDownloader", targetNamespace = "http://server/", className = "webservice.AvailableMovesDownloader")
    @ResponseWrapper(localName = "availableMovesDownloaderResponse", targetNamespace = "http://server/", className = "webservice.AvailableMovesDownloaderResponse")
    @Action(input = "http://server/ClientAtServer/availableMovesDownloaderRequest", output = "http://server/ClientAtServer/availableMovesDownloaderResponse")
    public List<BooleanArray> availableMovesDownloader();

}
